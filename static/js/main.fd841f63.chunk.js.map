{"version":3,"sources":["store/actionCreator/actionCreators.js","components/UsersRender.jsx","App.jsx","store/rootReducer/rootReducer.js","store/rootReducer/store.js","index.js"],"names":["getData","data","type","UsersRender","dispatch","useDispatch","users","useSelector","state","login","getDataFromServer","fetch","response","json","result","iteration","filter","el","id","localStorage","setItem","JSON","stringify","onClick","axios","post","Error","message","postDataToServer","title","then","toast","success","catch","err","error","payload","deleteData","removeItem","map","name","App","loginInitialState","isSucces","rootReducer","combineReducers","action","newData","item","i","taskId","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"yNAEaA,EAAU,SAACC,GACtB,MAAO,CACLC,KAAM,MACND,KAAMA,EAEV,E,OCuDeE,EArDK,WAElB,IAAMC,EAAWC,cAETC,EAAUC,aAAY,SAACC,GAAK,OAAKA,EAAMC,KAAK,IAA5CH,MAEFI,EAAiB,iDAAG,gHACHN,EDNvB,iDAAO,WAAOA,GAAQ,mGACGO,MAAM,8CAA8C,KAAD,EAA5D,OAARC,EAAQ,gBACKA,EAASC,OAAO,KAAD,EACV,OADlBZ,EAAI,OACVG,EAASJ,EAAQC,IAAO,kBACjBA,GAAI,2CACZ,mDALD,ICMoD,KAAD,EAA3Ca,EAAM,OAENC,EAAYD,EAAOE,QAAO,SAACC,GAC/B,OAAOA,EAAGC,GAAK,IAAM,CACvB,IAEAC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUP,IAAY,2CACzD,kBARsB,mCA6BvB,OACE,gCACE,wBAAQQ,QAASb,EAAkB,sBACnC,wBAAQa,QAjBS,WAKnBnB,EDjB4B,SAACH,GAC/B,wDAAO,WAAOG,GAAQ,0GAEKoB,IAAMC,KAC3B,6CACAxB,GACA,KAAD,EAHa,OAARW,EAAQ,yBAIPA,EAASX,MAAI,sCAEd,IAAIyB,MAAM,KAAMC,SAAS,KAAD,oDAEjC,mDAVD,EAWF,CCKaC,CAJI,CACXC,MAAOvB,KAINwB,MAAK,WACJC,IAAMC,QAAQ,UAChB,IACCC,OAAM,SAACC,GACNH,IAAMI,MAAMD,EAAIP,QAClB,GACJ,EAKkC,uBAC9B,wBAAQJ,QAAS,kBAvBML,EAuBkBZ,EAAMY,GAtBjDd,EDMsB,SAACc,GACzB,MAAO,CACLhB,KAAM,SACNkC,QAASlB,EAEb,CCXamB,CAAWnB,SACpBC,aAAamB,WAAW,QAFA,IAACpB,CAuB2B,EAAC,yBACnD,4OACCZ,EAAMiC,KAAI,SAACtC,GACV,OACE,gCACE,6BAAKA,EAAKiB,KACV,6BAAKjB,EAAKuC,SAFFvC,EAAKiB,GAKnB,MAGN,EClDeuB,MARf,WACE,OACE,8BACE,cAAC,EAAW,KAGlB,E,uBCNMC,EAAoB,CACxBpC,MAAO,GACPqC,UAAU,EACVR,MAAO,MAsCIS,EAAcC,YAAgB,CACzCpC,MApCmB,WAAwC,IAAvCD,EAAK,uDAAGkC,EAAmBI,EAAM,uCACrD,GAAoB,QAAhBA,EAAO5C,KAAgB,CACzB,IAAM6C,EAAUD,EAAO7C,KAAKe,QAAO,SAACgC,EAAMC,GAAC,OAAKA,EAAI,CAAC,IACrD,OAAO,2BACFzC,GAAK,IACRF,MAAOyC,GAEX,CAEA,GAAoB,WAAhBD,EAAO5C,KAAmB,CAC5B,IAAMgD,EAASJ,EAAOV,QAChBC,EAAa7B,EAAMF,MAAMU,QAAO,SAACf,GAAI,OAAKA,EAAKiB,KAAOgC,CAAM,IAClE,OAAO,2BACF1C,GAAK,IACRF,MAAO+B,GAEX,CAEA,MAAoB,WAAhBS,EAAO5C,KACF,2BACFM,GAAK,IACRmC,UAAU,IAIM,UAAhBG,EAAO5C,KACF,2BACFM,GAAK,IACR2B,MAAOW,EAAOV,UAIX5B,CACT,ICpCe2C,EADDC,YAAYR,EAAaS,YAAgBC,M,MCMvDC,IAASC,OACP,eAAC,IAAQ,CAACL,MAAOA,EAAM,UACrB,cAAC,IAAc,IACf,cAAC,EAAG,OAENM,SAASC,eAAe,Q","file":"static/js/main.fd841f63.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const getData = (data) => {\n  return {\n    type: \"GET\",\n    data: data,\n  };\n};\n\nexport const asyncSendRequest = () => {\n  return async (dispatch) => {\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const data = await response.json();\n    dispatch(getData(data));\n    return data;\n  };\n};\n\nexport const postDataToServer = (data) => {\n  return async (dispatch) => {\n    try {\n      const response = await axios.post(\n        \"https://jsonplaceholder.typicode.com/users\",\n        data\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  };\n};\n\nexport const deleteData = (id) => {\n  return {\n    type: \"DELETE\",\n    payload: id,\n  };\n};\n\nexport const removeData = () => {\n  return {\n    type: 'remove',\n    payload: []\n  }\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport {\n  asyncSendRequest,\n  deleteData,\n  postDataToServer,\n} from \"../store/actionCreator/actionCreators\";\n\nconst UsersRender = () => {\n\n  const dispatch = useDispatch();\n\n  const { users } = useSelector((state) => state.login);\n\n  const getDataFromServer = async () => {\n    const result = await dispatch(asyncSendRequest());\n\n    const iteration = result.filter((el) => {\n      return el.id % 2 == -0;\n    });\n\n    localStorage.setItem(\"data\", JSON.stringify(iteration));\n  };\n\n  const deleteDataHandler = (id) => {\n    dispatch(deleteData(id));\n    localStorage.removeItem(\"data\");\n  };\n\n  const postToServer = () => {\n    const data = {\n      title: users,\n    };\n\n    dispatch(postDataToServer(data))\n      .then(() => {\n        toast.success(\"Succes!\");\n      })\n      .catch((err) => {\n        toast.error(err.message);\n      });\n  };\n\n  return (\n    <div>\n      <button onClick={getDataFromServer}>Get Data</button>\n      <button onClick={postToServer}>Post Data</button>\n      <button onClick={() => deleteDataHandler(users.id)}>Delete Data</button>\n      <h1>Для удаления с UI ,надо обновить страницу!</h1>\n      {users.map((data) => {\n        return (\n          <div key={data.id}>\n            <li>{data.id}</li>\n            <li>{data.name}</li>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default UsersRender;\n","import UsersRender from \"./components/UsersRender\";\n\nfunction App() {\n  return (\n    <div>\n      <UsersRender />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\n\nconst loginInitialState = {\n  users: [],\n  isSucces: false,\n  error: null,\n};\n\nconst loginReducer = (state = loginInitialState, action) => {\n  if (action.type === \"GET\") {\n    const newData = action.data.filter((item, i) => i % 2);\n    return {\n      ...state,\n      users: newData,\n    };\n  }\n\n  if (action.type === \"DELETE\") {\n    const taskId = action.payload;\n    const deleteData = state.users.filter((data) => data.id === taskId);\n    return {\n      ...state,\n      users: deleteData,\n    };\n  }\n\n  if (action.type === \"SUCCES\") {\n    return {\n      ...state,\n      isSucces: true,\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      ...state,\n      error: action.payload,\n    };\n  }\n\n  return state;\n};\n\nexport const rootReducer = combineReducers({\n  login: loginReducer,\n});\n","import { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"./rootReducer\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/rootReducer/store\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ToastContainer />\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}